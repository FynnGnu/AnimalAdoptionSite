<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Fynn Gnugesser Website</title>
    <link rel="stylesheet" type="text/css" href="create_account.css" />
  </head>
  <body>
    <%- include ('partials/header.ejs')%>
    <div class="all_content">
      <%- include ('partials/navbar.ejs')%>
      <div class="main_content">
        <h2>Register Account Form</h2>
        <form id="registerForm">
          <label for="username">Username: <br />(letters and numbers)</label>
          <input type="text" id="username" name="username" required />
          <br />
          <label for="password"
            >Password: <br />
            (4+ digits long, letters and numbers, at least one letter and one
            number)</label
          >
          <input type="password" id="password" name="password" required />
          <br />
          <button type="submit" onclick="validateInput(event)">
            Create Account
          </button>

          <br />
          <br />
          <a id="login" href="/login"
            >Already have an account? Click here to login</a
          >
          <br /><br />
          <div id="registerFormResponse"><br /></div>
        </form>
      </div>
    </div>
    <%- include ('partials/footer.ejs')%>

    <script src="validateFormat.js"></script>
    <script>
      function validateInput(event) {
        event.preventDefault(); // Prevent default form submission
        const form = document.getElementById("registerForm");
        const username = document.getElementById("username").value;
        const password = document.getElementById("password").value;

        // Call your client-side validation function
        const validationResult = validateFormat(username, password);
        if (!validationResult.success) {
          // Display the error message if validation fails
          document.getElementById("registerFormResponse").innerHTML =
            validationResult.message;
          return;
        }

        // Proceed with the AJAX request if validation passes
        fetch("/validateInput", {
          method: "POST",
          body: new URLSearchParams(new FormData(form)),
        })
          .then((response) => response.json()) // Assuming the server sends a JSON response
          .then((result) => {
            document.getElementById("registerFormResponse").innerHTML =
              result.message; // Displays message in the div
            if (result.success) {
              form.reset(); // Reset the form fields when successfully added account
            }
          });
      }
    </script>
    <script src="logoutButton.js"></script>
    <%- include ('partials/logoutCheck.ejs')%>
  </body>
</html>
